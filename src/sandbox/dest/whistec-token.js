/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, EthAddress, Point, } from '@aztec/aztec.js';
import TokenContractArtifactJson from './contracts/whistec_token/target/WhistecToken.json' assert { type: 'json' };
export const TokenContractArtifact = TokenContractArtifactJson;
/**
 * Type-safe interface for contract Token;
 */
export class TokenContract extends ContractBase {
    constructor(completeAddress, wallet, portalContract = EthAddress.ZERO) {
        super(completeAddress, TokenContractArtifact, wallet, portalContract);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, TokenContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(pxe, admin) {
        return new DeployMethod(Point.ZERO, pxe, TokenContractArtifact, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(pxe, publicKey, admin) {
        return new DeployMethod(publicKey, pxe, TokenContractArtifact, Array.from(arguments).slice(2));
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return TokenContractArtifact;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2hpc3RlYy10b2tlbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy93aGlzdGVjLXRva2VuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNDQUFzQztBQUV0QyxvQkFBb0I7QUFDcEIsT0FBTyxFQUlILFFBQVEsRUFFUixZQUFZLEVBR1osWUFBWSxFQUNaLFVBQVUsRUFLVixLQUFLLEdBR04sTUFBTSxpQkFBaUIsQ0FBQztBQUV6QixPQUFPLHlCQUF5QixNQUFNLG9EQUFvRCxDQUFDLFNBQVMsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBRW5ILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLHlCQUE2QyxDQUFDO0FBRW5GOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGFBQWMsU0FBUSxZQUFZO0lBQzdDLFlBQW9CLGVBQWdDLEVBQUUsTUFBYyxFQUFFLGNBQWMsR0FBRyxVQUFVLENBQUMsSUFBSTtRQUNwRyxLQUFLLENBQUMsZUFBZSxFQUFFLHFCQUFxQixFQUFFLE1BQU0sRUFBRSxjQUFjLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFxQixFQUFFLE1BQWM7UUFDMUQsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBMkIsQ0FBQztJQUN4RixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQVEsRUFBRSxLQUF1QjtRQUNwRCxPQUFPLElBQUksWUFBWSxDQUFnQixLQUFLLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxxQkFBcUIsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pILENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxHQUFRLEVBQUUsU0FBb0IsRUFBRSxLQUF1QjtRQUN2RixPQUFPLElBQUksWUFBWSxDQUFnQixTQUFTLEVBQUUsR0FBRyxFQUFFLHFCQUFxQixFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEgsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTyxxQkFBcUIsQ0FBQztJQUMvQixDQUFDO0NBc0dGIn0=